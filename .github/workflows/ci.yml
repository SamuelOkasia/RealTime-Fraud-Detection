name: CI / CD Pipeline for Fraud Detection

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: transactions_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run backend tests
      run: |
        cd backend
        pytest --disable-warnings

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.0'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Build backend Docker image
      run: |
        docker build -t fraud-detection-backend:latest ./backend

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build backend Docker image
      run: |
        docker build -t fraud-detection-backend:latest ./backend
        docker tag fraud-detection-backend:latest samuelokasia/realtime-fraud-backend:latest
        docker push samuelokasia/realtime-fraud-backend:latest

    - name: Build frontend Docker image
      run: |
        docker build -t fraud-detection-frontend:latest ./frontend
        docker tag fraud-detection-frontend:latest samuelokasia/realtime-fraud-frontend:latest
        docker push samuelokasia/realtime-fraud-frontend:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2 # Correct region
      
    - name: Register new backend task definition
      id: register-backend-task
      run: |
        BACKEND_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition fraud-detection-backend-task:9)    
        echo "Creating new backend task definition revision..."
        BACKEND_NEW_TASK=$(echo $BACKEND_TASK_DEFINITION | jq '.taskDefinition | 
          del(.status, .taskDefinitionArn, .revision, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy) |
          .containerDefinitions[0].image = "samuelokasia/realtime-fraud-backend:latest"')
        echo $BACKEND_NEW_TASK > backend-task.json
        aws ecs register-task-definition --cli-input-json file://backend-task.json
      
    - name: Update backend service
      run: |
        NEW_BACKEND_REVISION=$(aws ecs describe-task-definition --task-definition fraud-detection-backend-task --query 'taskDefinition.revision' --output text)
        aws ecs update-service --cluster RealTime-Fraud-Detection --service backend-service --task-definition fraud-detection-backend-task:$NEW_BACKEND_REVISION

    - name: Register new frontend task definition
      id: register-frontend-task
      run: |
        FRONTEND_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition fraud-detection-frontend-task:18)
        echo "Creating new frontend task definition revision..."    
        echo $FRONTEND_TASK_DEFINITION | jq '
          .taskDefinition | 
          del(.status, .taskDefinitionArn, .revision, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy, .registeredResource, .arn) |
          .containerDefinitions[0].image = "samuelokasia/realtime-fraud-frontend:latest"
        ' > frontend-task.json
        aws ecs register-task-definition --cli-input-json file://frontend-task.json
  
    - name: Update frontend service
      run: |
        NEW_FRONTEND_REVISION=$(aws ecs describe-task-definition --task-definition fraud-detection-frontend-task --query 'taskDefinition.revision' --output text)
        aws ecs update-service --cluster RealTime-Fraud-Detection --service frontend-service --task-definition fraud-detection-frontend-task:$NEW_FRONTEND_REVISION
    